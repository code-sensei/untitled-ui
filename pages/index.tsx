import Head from 'next/head'
import Image from 'next/image'
import styles from 'styles/Home.module.css'
import { Divider, Input, Sidebar, StatusBadge } from '../components/ui'
import { useState } from 'react'
import { ArrowDownIcon, DownloadCloudIcon, MailIcon, MastercardIcon, PlusIcon, VisaIcon } from '../components/icons'

interface ButtonTab {
  text: string,
  active: boolean
}

interface Card {
  type: 'Visa' | 'Mastercard',
  last4: string,
  expiry: string
}

export interface BillingItem {
  invoice: string,
  amount: string,
  date: string,
  status: "Paid" | "Unpaid",
  usersOnPlan: string[]
}

export default function Home() {

  const [ buttonTabs, setButtonTabs ] = useState<ButtonTab[]>([
    {
      text: 'My Details',
      active: false
    },
    {
      text: 'Profile',
      active: false
    },
    {
      text: 'Password',
      active: false
    },
    {
      text: 'Team',
      active: false
    },
    {
      text: 'Plan',
      active: false
    },
    {
      text: 'Billing',
      active: true
    },
    {
      text: 'Notifications',
      active: false
    },
    {
      text: 'Integrations',
      active: false
    },
    {
      text: 'API',
      active: false
    },
  ])

  const [ cards, setCards ] = useState<Card[]>([
    {
      type: 'Visa',
      last4: '1234',
      expiry: '06/2024'
    },
    {
      type: 'Mastercard',
      last4: '1234',
      expiry: '06/2024'
    }
  ])

  const [ billingItems, setBillingitems ] = useState<BillingItem[]>([
    {
      invoice: 'Basic Plan – Dec 2022',
      amount: 'USD $10.00',
      date: 'Dec 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg',
        '/images/avatars/avatar-4.svg',
        '/images/avatars/avatar-5.svg',
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-1.svg',
      ]
    },
    {
      invoice: 'Basic Plan – Nov 2022',
      amount: 'USD $10.00',
      date: 'Nov 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg',
        '/images/avatars/avatar-4.svg',
        '/images/avatars/avatar-5.svg',
        '/images/avatars/avatar-1.svg',
      ]
    },
    {
      invoice: 'Basic Plan – Oct 2022',
      amount: 'USD $10.00',
      date: 'Oct 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg',
        '/images/avatars/avatar-4.svg',
        '/images/avatars/avatar-5.svg'
      ]
    },
    {
      invoice: 'Basic Plan – Sep 2022',
      amount: 'USD $10.00',
      date: 'Sep 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg'
      ]
    },
    {
      invoice: 'Basic Plan – Aug 2022',
      amount: 'USD $10.00',
      date: 'Aug 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg',
        '/images/avatars/avatar-4.svg'
      ]
    },
    {
      invoice: 'Basic Plan – Jul 2022',
      amount: 'USD $10.00',
      date: 'Jul 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg',
        '/images/avatars/avatar-4.svg'
      ]
    },
    {
      invoice: 'Basic Plan – Jun 2022',
      amount: 'USD $10.00',
      date: 'Jun 1, 2022',
      status: 'Paid',
      usersOnPlan: [
        '/images/avatars/avatar-1.svg',
        '/images/avatars/avatar-2.svg',
        '/images/avatars/avatar-3.svg'
      ]
    }
  ])

  const [ selectedCard, setSelectedCard ] = useState<number>(0);

  return (
    <>
      <Head>
        <title>Vencru</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main__layout}>
        <aside className={styles.sidebar}>
          <Sidebar />
        </aside>
        <div className={styles.main__content}>
          <header className={styles.main__header}>
            <div>
              <p className={styles.page__heading}>Settings</p>
              <p className={styles.page__subheading}>Manage your team and preferences here.</p>
            </div>
            <div className={styles.button__group}>
              { buttonTabs.map((item, index) => {
                return (
                  <button key={`button-tab-${item.text}`}
                    className={ !item.active ?
                      styles.button__group__item : 
                      styles.button__group__active__item
                    }
                  >{ item.text }</button>
                )
              })}
            </div>
          </header>
          <section>
            <div className={styles.section__header}>
              <p className={styles.section__heading}>Payment method</p>
              <p className={styles.section__subheading}>Update your billing details and address.</p>
            </div>
            <Divider
              direction={'horizontal'}
            />
            <div className={styles.section__form}>
              <div className={styles.section__form__left}>
                <p className={styles.form__heading}>Contact email</p>
                <p className={styles.form__subheading}>Where should invoices be sent?</p>
              </div>
              <div className={styles.section__form__right}>
                <form className={styles.contact__email__form}>
                  <div className={styles.form__item}>
                    <input 
                      type={'radio'}
                      name='contact-email'
                      id='default-contact-email'
                      className={styles.form__radio__input}
                    />
                    <label 
                      htmlFor='default-contact-email'
                      className={styles.form__item__label}
                    >
                      <p className={styles.form__heading}>Send to my account email</p>
                      <p className={styles.form__subheading}>olivia@untitledui.com</p>
                    </label>
                  </div>
                  <div className={styles.form__item}>
                    <input 
                      type={'radio'}
                      name='contact-email'
                      id='alternate-contact-email'
                      className={styles.form__radio__input}
                    />
                    <label 
                      htmlFor='alternate-contact-email'
                      className={styles.form__item__label}
                    >
                      <p className={styles.form__heading}>Send to an alternative email</p>
                      <Input 
                        placeholder="billing@untitledui.com"
                        icon={<MailIcon />}
                        className={styles.input__container}
                      />
                    </label>
                  </div>
                </form>
              </div>
            </div>
            <Divider 
              direction={'horizontal'}
            />
            <div className={styles.card__section__form}>
              <div className={styles.section__form__left}>
                <p className={styles.form__heading}>Card details</p>
                <p className={styles.form__subheading}>Select default payment method.</p>
              </div>
              <div className={styles.section__form__right}>
                <form className={styles.contact__email__form}>
                  { cards.map((card, index) => {
                    return (
                      <div 
                        className={`${styles.form__item} ${styles.pointer}`}
                        key={`card-${index}`}   
                        onClick={() => setSelectedCard(index)}
                      >
                        <div
                          className={
                            selectedCard === index ? 
                            styles.active__card :
                            styles.card
                          }
                        >
                          { card.type === 'Visa' && <VisaIcon /> }
                          { card.type === 'Mastercard' && <MastercardIcon /> }
                          <div className={styles.card__details}>
                            <div>
                              <p className={styles.card__number}>{ card.type } ending in { card.last4 }</p>
                              <p className={styles.card__exp}>Expiry { card.expiry }</p>
                            </div>
                            <div className={styles.card__actions}>
                              <button
                                className={styles.card__set__as__default}
                              >Set as default</button>
                              <button
                                className={styles.card__edit}
                              >Edit</button>
                            </div>
                          </div>
                          <input 
                            type={'radio'}
                            name='card'
                            id="visa-card"
                            checked={ selectedCard === index }
                            className={styles.card__radio__button}
                          />
                        </div>
                      </div>
                    )
                  })}
                  <div className={styles.form__item}>
                    <button
                      className={styles.add__new__card__button}
                    >
                      <PlusIcon />
                      <p className={styles.add__card__text}>Add new payment method</p>
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </section>
          <section>
            <div className={styles.billing__section__header}>
              <p className={styles.section__heading}>Billing history</p>
              <button
                className={styles.download__all__button}
              >
                <DownloadCloudIcon />
                <p>Download All</p>
              </button>
            </div>
            <div className={styles.billing__table__container}>
              <table className={styles.billing__table}>
                <thead>
                  <tr>
                    <th>
                      <div className={styles.invoice__header}>
                        <input 
                          type={'checkbox'}
                          name="select-all-billing"
                          id='select-all-billing'
                          className={styles.billing__checkbox}
                        />
                        <p className={styles.header__text}>Invoice</p>
                        <ArrowDownIcon />
                      </div>
                    </th>
                    <th>Amount</th>
                    <th className={styles.hidden__on__mobile}>Date</th>
                    <th className={styles.hidden__on__mobile}>Status</th>
                    <th className={styles.hidden__on__mobile}>Users on plan</th>
                    <th className={styles.hidden__on__mobile}></th>
                  </tr>
                </thead>
                <tbody>
                  { billingItems.map((item, index) => {
                    return (
                      <tr key={`billing-item-${index}`}>
                        <td
                          className={styles.invoice__data__item}
                        >
                          <input 
                            type={'checkbox'}
                            name="select-all-billing"
                            id='select-all-billing'
                            className={styles.billing__checkbox}
                          />
                          { item.invoice }
                        </td>
                        <td>{ item.amount }</td>
                        <td className={styles.hidden__on__mobile}>{ item.date }</td>
                        <td className={styles.hidden__on__mobile}>
                          <StatusBadge 
                            status={item.status}
                          />
                        </td>
                        <td className={styles.hidden__on__mobile}>
                          { item.usersOnPlan && <div className={styles.users__on__plan__container}>
                            { item.usersOnPlan.slice(0, 5).map((user, index) => {
                              return (
                                <Image 
                                  key={`user-${index}`}
                                  src={user}
                                  height={24}
                                  width={24}
                                  alt={`user-${index}`}
                                  role={'presentation'}
                                  className={styles.user__on__plan}
                                />
                              )
                            })}
                            { item.usersOnPlan.length > 5 && 
                              <div className={styles.excess__users}>
                                +{ item.usersOnPlan.length - 5 }
                              </div>
                            }
                          </div>}
                        </td>
                        <td className={`${styles.action__item} ${styles.hidden__on__mobile}`}>
                          <DownloadCloudIcon />
                        </td>
                      </tr>
                    )
                  })}
                </tbody>
              </table>
            </div>
          </section>
        </div>
      </main>
    </>
  )
}
